<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-4.0"
       object-id="booking">
    <list>
        <sql>
            select :select
            from booking bg
            join member m on m.id = bg.member_id
            join book b on b.id = bg.book_id
            where :filters
            order by bg.booking_from asc
            limit :limit offset :offset
        </sql>
    </list>
    <count count-mapping="[0][cnt]">
        <sql>
            select count(*) as cnt
            from booking bg
            join member m on m.id = bg.member_id
            join book b on b.id = bg.book_id
            where :filters
        </sql>
    </count>
    <fields>
        <field id="id">
            <select mapping="[id]">bg.id as id</select>
            <filters>
                <eq filter-id="id">bg.id = :id</eq>
            </filters>
        </field>
        <field id="from" domain="localdate">
            <select mapping="[booking_from]">bg.booking_from as booking_from</select>
        </field>
        <field id="until" domain="localdate">
            <select mapping="[booking_until]">bg.booking_until as booking_until</select>
            <filters>
                <more filter-id="until" mapping="[until]">bg.booking_until >= :until</more>
            </filters>
        </field>
        <field id="status">
            <select mapping="[status]" normalize="@n2oMessageSourceAccessor.getMessage(#this)"><![CDATA[
            (case when bg.booking_from <= current_date and bg.booking_until >= current_date then 'rented'
                  when bg.booking_until < current_date then 'returned'
                  when bg.booking_from >= current_date then 'booked' end) as status
            ]]></select>
        </field>
        <field id="statusColor">
            <select mapping="[status]" normalize="#this=='returned'?'dark':#this=='rented'?'success':'warning'"/>
        </field>
        <field id="daysBeforeReturning">
            <select mapping="[days_before_returning]"
                    normalize="#data[status] != null ? #this : null">(bg.booking_until - current_date) as days_before_returning</select>
        </field>
        <field id="daysBeforeRenting">
            <select mapping="[days_before_renting]"
                    normalize="#data[status] != null ? #this : null">(bg.booking_from - current_date) as days_before_renting</select>
        </field>
        <field id="dayLeft">
            <select mapping="[day_left]"
                    normalize="#data[status] != null ? #this : null">(bg.booking_until - current_date) as day_left</select>
        </field>
        <field id="book.id">
            <select mapping="[book_id]">bg.book_id as book_id</select>
            <filters>
                <eq filter-id="book.id" mapping="[book_id]">bg.book_id = :book_id</eq>
            </filters>
        </field>
        <field id="member.id">
            <select mapping="[member_id]">bg.member_id as member_id</select>
            <filters>
                <eq filter-id="member.id" mapping="[member_id]">bg.member_id = :member_id</eq>
            </filters>
        </field>
        <field id="member.name">
            <select mapping="[member_name]">m.name as member_name</select>
        </field>
        <field id="member.avatar">
            <select mapping="[member_avatar]">m.avatar as member_avatar</select>
        </field>
        <field id="book.title">
            <select mapping="[book_title]"
                    normalize="T(com.github.iryabov.readingroom.service.UiUtilsKt).shorten(#this, 50)">b.title as book_title</select>
        </field>
        <field id="book.fullTitle">
            <select mapping="[book_title]"/>
        </field>
        <field id="book.cover">
            <select mapping="[book_cover]">b.cover as book_cover</select>
        </field>
        <field id="book.authors">
            <select mapping="[book_authors]">array_to_string(b.authors, ', ', '*') as book_authors</select>
        </field>
        <field id="createdAt" domain="localdate">
            <select mapping="[created_at]">bg.created_at as created_at</select>
        </field>

        <field id="period">
            <select mapping="[booking_from]" normalize="#data[from] + ' - ' + #data[until]"/>
        </field>
    </fields>
</query>
