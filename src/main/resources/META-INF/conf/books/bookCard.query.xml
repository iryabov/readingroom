<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-4.0" object-id="book">
    <unique filters="id, userId" result-mapping="[0]">
        <sql>
            select :select
            from book b
            where id = :id
        </sql>
    </unique>

    <fields>
        <field id="id">
            <select mapping="[id]">b.id as id</select>
            <filters>
                <eq filter-id="id" mapping="['id']"/>
            </filters>
        </field>
        <field id="userId">
            <filters>
                <eq filter-id="userId" default-value="#{userId}" mapping="[user_id]"/>
            </filters>
        </field>
        <field id="status">
            <select mapping="[status]"
                    default-value="NOT_AVAILABLE">b.status as status</select>
        </field>
        <field id="statusColor">
            <select mapping="[status]"
                    normalize="T(com.github.iryabov.readingroom.entity.BookStatus).valueOf(#this).color"/>
        </field>
        <field id="statusLocalized">
            <select mapping="[status]"
                    default-value="NOT_AVAILABLE"
                    normalize="@n2oMessageSourceAccessor.getMessage(#this.toLowerCase())"/>
        </field>
        <field id="title">
            <select mapping="[title]">b.title as title</select>
        </field>
        <field id="authors" domain="string">
            <select mapping="[authors]">array_to_string(b.authors, ', ', '*') as authors</select>
        </field>
        <field id="cover">
            <select mapping="[cover]">b.cover as cover</select>
        </field>
        <field id="description">
            <select mapping="[description]">b.description as description</select>
        </field>
        <field id="language">
            <select mapping="[language]">b.language as language</select>
        </field>
        <field id="languageLocalized">
            <select mapping="[language]" normalize="#this != null ? @n2oMessageSourceAccessor.getMessage(#this.toLowerCase()) : null"/>
        </field>
        <field id="createdBy">
            <select mapping="[created_by_name]" default-value="#{name}">(select m.name from member m where m.id = b.created_by) as created_by_name</select>
        </field>
        <field id="createdAt">
            <select mapping="[created_at]">b.created_at as created_at</select>
        </field>
        <field id="publisher">
            <select mapping="[publisher]">b.publisher as publisher</select>
        </field>
        <field id="published">
            <select mapping="[published]">b.published as published</select>
        </field>
        <field id="pageCount">
            <select mapping="[pagecount]">b.pagecount as pagecount</select>
        </field>
        <field id="previewUrl">
            <select mapping="[preview_url]">b.preview_url as preview_url</select>
        </field>
        <field id="categories">
            <select mapping="[categories]">array_to_string(b.categories, ', ', '*') as categories</select>
        </field>

        <field id="memberRating">
            <select mapping="[memberRating]">(select round(r.rate) from rating r where book_id = b.id and member_id = :user_id) as memberRating</select>
        </field>
        <field id="memberWantToRead">
            <select mapping="[memberWantToRead]">exists (select * from wanttoread wr where book_id = b.id and wr.member_id = :user_id) as memberWantToRead</select>
        </field>
        <field id="memberHaveRead">
            <select mapping="[memberHaveRead]">exists (select * from haveread hr where book_id = b.id and hr.member_id = :user_id) as memberHaveRead</select>
        </field>
        <field id="rating">
            <select mapping="[rating]">(select round(avg(r.rate), 1) from rating r where r.book_id = b.id) as rating</select>
        </field>
        <field id="wanttoread">
            <select mapping="[wanttoread]">(select count(*) from wanttoread wr where wr.book_id = b.id) as wanttoread</select>
        </field>
        <field id="haveread">
            <select mapping="[haveread]">(select count(*) from haveread hr where hr.book_id = b.id) as haveread</select>
        </field>
    </fields>
</query>
