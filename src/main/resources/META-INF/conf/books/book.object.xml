<?xml version='1.0' encoding='UTF-8'?>
<object xmlns="http://n2oapp.net/framework/config/schema/object-4.0"
        entity-class="com.github.iryabov.readingroom.entity.Book">
    <operations>
        <operation id="saveBook">
            <invocation>
                <java method="save" class="com.github.iryabov.readingroom.repository.BookRepository">
                    <arguments>
                        <argument name="entity" type="entity"/>
                    </arguments>
                    <spring/>
                </java>
            </invocation>
            <in>
                <field id="id" mapping="id" param="book_id"/>
                <field id="member.id" mapping="createdBy.id" domain="integer" default-value="#{userId}"/>
                <field id="cover.url" mapping="cover"/>
                <field id="title" mapping="title"/>
                <field id="authors" mapping="authors"/>
                <field id="description" mapping="description"/>
                <field id="categories" mapping="categories"/>
                <field id="language.id" mapping="language"
                       normalize="T(com.github.iryabov.readingroom.entity.Language).valueOf(#this)"/>
                <field id="publisher" mapping="publisher"/>
                <field id="published" mapping="published" domain="integer"/>
                <field id="isbn" mapping="isbn"/>
                <field id="pageCount" mapping="pagecount"/>
                <field id="previewUrl" mapping="previewUrl"/>
                <field id="status.id" mapping="status"
                       normalize="T(com.github.iryabov.readingroom.entity.BookStatus).valueOf(#this)"/>
            </in>
        </operation>
        <operation id="rateBook">
            <invocation>
                <sql>
                    insert into rating (book_id, member_id, rate, created_at) values (:book_id, :member_id, :rate, :created_at)
                    on conflict on constraint rating_book_member_unique
                    do update set rate = EXCLUDED.rate, created_at = EXCLUDED.created_at
                </sql>
            </invocation>
            <in>
                <field id="id" mapping="['book_id']" param="book_id"/>
                <field id="member.id" default-value="#{userId}" mapping="['member_id']"/>
                <field id="rate" mapping="['rate']"/>
                <field id="now" default-value="1" normalize="T(java.time.LocalDate).now()" mapping="['created_at']"/>
            </in>
        </operation>
        <operation id="wantToRead">
            <invocation>
                <sql>
                    insert into wanttoread (book_id, member_id) values (:book_id, :member_id)
                    on conflict do nothing
                </sql>
            </invocation>
            <in>
                <field id="id" mapping="['book_id']" param="book_id"/>
                <field id="member.id" default-value="#{userId}" mapping="['member_id']"/>
            </in>
        </operation>
        <operation id="haveRead">
            <invocation>
                <sql>
                    insert into haveread (book_id, member_id) values (:book_id, :member_id)
                    on conflict do nothing
                </sql>
            </invocation>
            <in>
                <field id="id" mapping="['book_id']" param="book_id"/>
                <field id="member.id" default-value="#{userId}" mapping="['member_id']"/>
            </in>
        </operation>

        <operation id="doNotWantToRead">
            <invocation>
                <sql>
                    delete from wanttoread where book_id = :book_id and member_id = :member_id
                </sql>
            </invocation>
            <in>
                <field id="id" mapping="['book_id']" param="book_id"/>
                <field id="member.id" default-value="#{userId}" mapping="['member_id']"/>
            </in>
        </operation>
        <operation id="haveNotRead">
            <invocation>
                <sql>
                    delete from haveread where book_id = :book_id and member_id = :member_id
                </sql>
            </invocation>
            <in>
                <field id="id" mapping="['book_id']" param="book_id"/>
                <field id="member.id" default-value="#{userId}" mapping="['member_id']"/>
            </in>
        </operation>
    </operations>
</object>
