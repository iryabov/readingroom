<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-4.0" object-id="book">
    <list>
        <sql>
            select
              (select avg(r.rate) from rating r where r.book_id = b.id) as rating,
              (select count(*) from wanttoread wr where wr.book_id = b.id) as wanttoread,
              (select count(*) from haveread hr where hr.book_id = b.id) as haveread,
              b.id as id,
              b.title as title,
              array_to_string(b.authors, ', ', '*') as authors,
              b.cover as cover,
              b.description as description,
              b.status as status,
              exists (select * from wanttoread wr where book_id = b.id and wr.member_id = :user_id) as memberWantToRead,
              exists (select * from haveread hr where book_id = b.id and hr.member_id = :user_id) as memberHaveRead
            from book b
            where :filters
            order by ${sort} desc
            limit :limit offset :offset
        </sql>
    </list>
    <count count-mapping="[0][cnt]">
        <sql>
            select count(*) as cnt
            from book b
            where :filters
        </sql>
    </count>

    <fields>
        <field id="id">
            <select mapping="[id]"/>
            <filters>
                <eq filter-id="id">b.id = :id</eq>
            </filters>
        </field>
        <field id="userId">
            <filters>
                <eq filter-id="userId" default-value="#{userId}" mapping="[user_id]"/>
            </filters>
        </field>
        <field id="title">
            <select mapping="[title]"
                    normalize="T(com.github.iryabov.readingroom.service.UiUtilsKt).shorten(#this, 50)"/>
        </field>
        <field id="authors" domain="string">
            <select mapping="[authors]"
                    normalize="T(com.github.iryabov.readingroom.service.UiUtilsKt).shorten(#this, 50)"/>
        </field>
        <field id="cover">
            <select mapping="[cover]"/>
        </field>
        <field id="rating">
            <select mapping="[rating]"/>
        </field>
        <field id="wantToRead">
            <select mapping="[wanttoread]"/>
        </field>
        <field id="description">
            <select mapping="[description]"
                    normalize="T(com.github.iryabov.readingroom.service.UiUtilsKt).shorten(#this, 200)"/>
        </field>
        <field id="status">
            <select mapping="[status]"/>
            <filters>
                <eq filter-id="status" mapping="[status]">(:status = 'ALL' or b.status = :status)</eq>
            </filters>
        </field>
        <field id="statusText">
            <select mapping="[status]"
                    default-value="NOT_AVAILABLE"
                    normalize="@n2oMessageSourceAccessor.getMessage(#this.toLowerCase())"/>
        </field>
        <field id="statusColor">
            <select mapping="[status]"
                    normalize="T(com.github.iryabov.readingroom.entity.BookStatus).valueOf(#this).color"/>
        </field>
        <field id="memberWantToRead">
            <select mapping="[memberWantToRead]"/>
        </field>
        <field id="memberHaveRead">
            <select mapping="[memberHaveRead]"/>
        </field>
        <field id="categories">
            <filters>
                <eq filter-id="category" mapping="[category]">:category = any(categories)</eq>
            </filters>
        </field>
    </fields>
</query>
