<?xml version='1.0' encoding='UTF-8'?>
<query xmlns="http://n2oapp.net/framework/config/schema/query-4.0"
       object-id="member">
    <list>
        <sql><![CDATA[
            select
                (select count(*) from review v where v.member_id = m.id) as reviews,
                (select count(*) from booking k where k.member_id = m.id and k.booking_until >= current_date) as booked,
                (select count(*) from booking k where k.member_id = m.id and k.booking_from <= current_date and k.booking_until >= current_date) as taken,
                (select count(*) from haveread hr where hr.member_id = m.id) as have_read,
                (select count(*) from wanttoread wr where wr.member_id = m.id) as want_to_read,
                m.id as id,
                m.email as email,
                m.name as name,
                m.avatar as avatar
            from member m
            where :filters
            order by ${sort}
        ]]>
        </sql>
    </list>
    <count count-mapping="[0][cnt]">
        <sql>
            select count(*) as cnt
            from member m
            where :filters
        </sql>
    </count>
    <fields>
        <field id="id" domain="integer">
            <select mapping="['id']"/>
            <filters>
                <eq filter-id="id">m.id = :id</eq>
            </filters>
        </field>
        <field id="email">
            <select mapping="['email']"/>
            <filters>
                <eq filter-id="email">m.email = :email</eq>
            </filters>
        </field>
        <field id="name">
            <select mapping="['name']"/>
            <filters>
                <like filter-id="name" mapping="[name]"
                      normalize="toLowerCase()">lower(m.name)||m.email like '%'||:name||'%'</like>
            </filters>
        </field>
        <field id="avatar">
            <select mapping="['avatar']"/>
        </field>
        <field id="haveRead">
            <select mapping="['have_read']"/>
        </field>
        <field id="wantToRead">
            <select mapping="['want_to_read']"/>
        </field>
        <field id="reviews">
            <select mapping="['reviews']"/>
            <filters>
                <eq filter-id="review">exists (select v.id from review v where v.member_id = m.id)</eq>
            </filters>
        </field>
        <field id="booked">
            <select mapping="['booked']"/>
        </field>
        <field id="taken">
            <select mapping="['taken']"/>
            <filters>
                <eq filter-id="taken"><![CDATA[
                exists (select k.id from booking k where k.member_id = m.id and k.booking_from <= current_date and k.booking_until >= current_date)
                ]]></eq>
            </filters>
        </field>
    </fields>
</query>
